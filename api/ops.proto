syntax = "proto3";

package api;

option go_package = "github.com/hatlonely/rpc-ops/api/gen/go/api";

import "google/api/annotations.proto";

message Empty {}

message Repository {
  string id = 1;
  string username = 2;
  string password = 3;
  string endpoint = 4;
  string name = 5;
  string opsFile = 6;
  string createAt = 7;
  string updateAt = 8;
}

message ListRepositoryReq {
  int32 offset = 1;
  int32 limit = 2;
}

message ListRepositoryRes {
  repeated Repository repositories = 1;
}

message GetRepositoryReq {
  string id = 1;
}

message DelRepositoryReq {
  string id = 1;
}

message PutRepositoryRes {
  string id = 1;
}

message Job {
  string id = 1;
  int32 seq = 2;
  string state = 3;
  string repositoryID = 4;
  string variableID = 5;
  string version = 6;
  string createAt = 7;
  string updateAt = 8;
  string scheduleAt = 9;
  string elapseSeconds = 10;
  string output = 11;
}

message ListJobReq {
  string repositoryID = 1;
  int32 offset = 2;
  int32 limit = 3;
}

message ListJobRes {
  repeated Job jobs = 1;
}

message GetJobReq {
  string id = 1;
}

message DelJobReq {
  string id = 1;
}

message DescribeRepositoryReq {
  string id = 1;
  string version = 2;
}

message DescribeRepositoryRes {
  string opsYaml = 1;
}

message RunOpsReq {
  string repositoryID = 1;
  string variableID = 2;
  string version = 3;
  string environment = 4;
  string task = 5;
  string args = 6;
}

message RunOpsRes {
  string jobID = 1;
}

service OpsService {
  rpc ListRepository(ListRepositoryReq) returns (ListRepositoryRes) {
    option (google.api.http) = {
      get: "/v1/repository"
    };
  }

  rpc GetRepository(GetRepositoryReq) returns (Repository) {
    option (google.api.http) = {
      get: "/v1/repository/{id}"
    };
  }

  rpc DelRepository(DelRepositoryReq) returns (Empty) {
    option (google.api.http) = {
      delete: "/v1/repository/{id}"
    };
  }

  rpc PutRepository(Repository) returns (PutRepositoryRes) {
    option (google.api.http) = {
      post: "/v1/repository"
      body: "*"
    };
  }

  rpc UpdateRepository(Repository) returns (Empty) {
    option (google.api.http) = {
      put: "/v1/repository/{id}"
      body: "*"
    };
  }

  rpc ListJob(ListJobReq) returns (ListJobRes) {
    option (google.api.http) = {
      get: "/v1/job"
    };
  }

  rpc GetJob(GetJobReq) returns (Job) {
    option (google.api.http) = {
      get: "/v1/job/{id}"
    };
  }

  rpc DelJob(DelJobReq) returns (Empty) {
    option (google.api.http) = {
      delete: "/v1/job/{id}"
    };
  }

  rpc DescribeRepository(DescribeRepositoryReq) returns (DescribeRepositoryRes) {
    option (google.api.http) = {
      post: "/v1/describeRepository"
      body: "*"
    };
  }

  rpc RunOps(RunOpsReq) returns (RunOpsRes) {
    option (google.api.http) = {
      post: "/v1/runOps"
      body: "*"
    };
  }
}
